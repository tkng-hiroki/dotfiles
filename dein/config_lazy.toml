[[plugins]]
repo = 'Shougo/denite.nvim'
on_event = 'BufRead'
hook_add = '''
nmap <Space> [denite]
nmap <silent> [denite]t :<C-u>Denite filetype<CR>
nmap <silent> [denite]p :<C-u>DeniteProjectDir file_rec<CR>
nmap <silent> [denite]f :<C-u>Denite file_rec<CR>
nmap <silent> [denite]l :<C-u>Denite line<CR>
nmap <silent> [denite]g :<C-u>Denite grep<CR>
nmap <silent> [denite]b :<C-u>Denite buffer<CR>
nmap <silent> [denite]] :<C-u>DeniteCursorWord grep<CR>
nmap <silent> [denite]r :<C-u>Denite -resume<CR>
nmap <silent> [denite]; :<C-u>Denite -resume -immediately -select=+1<CR>
nmap <silent> [denite]- :<C-u>Denite -resume -immediately -select=-1<CR>
nmap <silent> [denite]r :<C-u>Denite -resume -mode=normal<CR>
nmap <silent> [denite]e :<C-u>Denite everything<CR>
nmap <silent> [denite]w :<C-u>DeniteProjectDir everything<CR>
" nmap <silent> / :<C-u>Denite -auto-resize line<CR>
" nmap <silent> [denite]<C-d> :<C-u>call denite#start([{'name': 'file_rec', 'args': ['~/dotfiles']}])<CR>
" nmap <silent> <C-u>u :<C-u>Denite file_mru<CR>
" nmap <silent> <C-u>y :<C-u>Denite neoyank<CR>
'''
hook_post_source = '''
call denite#custom#source('buffer', 'matchers', ['matcher_substring'])
call denite#custom#source('file_rec', 'matchers', ['matcher_substring'])
if executable('rg')
  " call denite#custom#var('file_rec', 'command', ['rg', '--files', '--glob', '!.git', '!.svn', ''])
  call denite#custom#var('grep', 'command', ['rg'])
  call denite#custom#var('grep', 'default_opts', ['--vimgrep', '--no-heading'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'pattern_opt', ['--regexp'])
  call denite#custom#var('grep', 'separator', ['--'])
  call denite#custom#var('grep', 'final_opts', [])
elseif executable('ag')
  " call denite#custom#var('file_rec', 'command', ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
  " call denite#custom#var('grep', 'command', ['ag'])
  " call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep'])
  " call denite#custom#var('grep', 'recursive_opts', [])
  " call denite#custom#var('grep', 'pattern_opt', [])
  " call denite#custom#var('grep', 'separator', ['--'])
  " call denite#custom#var('grep', 'final_opts', [])
endif

if dein#tap('denite.nvim') && dein#tap('vim-qfreplace')
  function! MyDeniteReplace(context)
    let qflist = []
    for target in a:context['targets']
      if !has_key(target, 'action__path') | continue | endif
      if !has_key(target, 'action__line') | continue | endif
      if !has_key(target, 'action__text') | continue | endif
      call add(qflist, {
            \ 'filename': target['action__path'],
            \ 'lnum': target['action__line'],
            \ 'text': target['action__text']
            \ })
    endfor
    call setqflist(qflist)
    call qfreplace#start('')
  endfunction
  call denite#custom#action('file', 'qfreplace', function('MyDeniteReplace'))
endif

call denite#custom#var('everything', 'default_opts', ['!.obj', '!.o'])
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'roxma/nvim-yarp'
hook_add = '''
let g:python3_host_prog = 'python'
'''

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
depends = 'nvim-yarp'
depends = 'vim-hug-neovim-rpc'
on_i = 1
hook_source = '''
let g:deoplete#enable_at_startup = 1
'''

# [[plugins]]
# repo = 'autozimu/LanguageClient-neovim'
# depends = 'deoplete.nvim'
# on_ft = ['cpp']
# build = './install.sh'
# hook_source = '''
# set hidden
# let g:LanguageClient_serverCommands = {
#     \ 'cpp': ['e:\projects\cquery\cquery\build\release\bin\cquery', '--language-server'],
#     \ }
# let g:LanguageClient_autoStart = 1
# " Use an absolute configuration path if you want system-wide settings
# let g:LanguageClient_settingsPath = 'cquery/settings.json'
# nnoremap <silent> K :call LanguageClient_textDocument_hover()<CR>
# nnoremap <silent> gd :call LanguageClient_textDocument_definition()<CR>
# nnoremap <silent> <F2> :call LanguageClient_textDocument_rename()<CR>
# '''

# [[plugins]]
# repo = 'w0rp/ale'
